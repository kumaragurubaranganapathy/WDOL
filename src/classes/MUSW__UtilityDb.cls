/*
This file is generated and isn't the actual source code for this
managed global class.
This read-only file shows the class's global constructors,
methods, variables, and properties.
To enable code to compile, all methods return null.
*/
global class UtilityDb {
    global UtilityDb() {

    }
    @Deprecated
    global static List<String> describePicklist(Id sobjectId, String pickListFieldAPIName) {
        return null;
    }
    @Deprecated
    global static List<String> describePicklist(String sobjectType, Id recordTypeId, String pickListFieldAPIName) {
        return null;
    }
    @Deprecated
    global static Map<Id,List<SObject>> getChildren2(List<SObject> ts, String excludeChildren) {
        return null;
    }
    global static Map<String,String> getChildrenMap(String objName) {
        return null;
    }
    @Deprecated
    global static Map<Id,List<MUSW.WObject>> getChildren(List<SObject> ts, String excludeChildren) {
        return null;
    }
    global static Map<Id,List<SObject>> getContextChildren2(List<SObject> ts, List<MUSW__Automation_Rule__c> rules) {
        return null;
    }
    global static Map<String,String> getContextChildrenMap(String objName, List<MUSW__Automation_Rule__c> rules) {
        return null;
    }
    @Deprecated
    global static Map<Id,List<MUSW.WObject>> getContextChildren(List<SObject> ts, List<MUSW__Automation_Rule__c> rules) {
        return null;
    }
    global static String getContextFieldsFor_Str(String objName, List<MUSW__Automation_Rule__c> rules) {
        return null;
    }
    global static String getFieldsFor_Str(String objName, Boolean onlyUpdateables) {
        return null;
    }
    global static List<String> getFieldsFor(String objName, Boolean onlyUpdateables) {
        return null;
    }
    global static String getObjectLabelFromId(String ObjectId) {
        return null;
    }
    global static String getObjectLabelFromId(List<String> objectNames, String ObjectId) {
        return null;
    }
    global static String getObjectNameFromId(String objectId) {
        return null;
    }
    global static String getObjectNameFromId(List<String> objectNames, String objectId) {
        return null;
    }
    global static void putValueFor(SObject sobj, String field, String value) {

    }
}
