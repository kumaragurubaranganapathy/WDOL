/*
This file is generated and isn't the actual source code for this
managed global class.
This read-only file shows the class's global constructors,
methods, variables, and properties.
To enable code to compile, all methods return null.
*/
global class UtilitySObject {
    global UtilitySObject() {

    }
    global static SObject buildBasicSObject(String objName) {
        return null;
    }
    global static SObject buildBasicSObject(String objName, Map<String,Object> customFields) {
        return null;
    }
    global static Schema.DescribeSObjectResult describeSObject(String objName) {
        return null;
    }
    global static Map<String,String> getChildrenMap(String objName) {
        return null;
    }
    global static Map<Id,List<SObject>> getChildren(List<SObject> ts, String excludeChildren) {
        return null;
    }
    global static String getFieldId(String objName, String fieldName) {
        return null;
    }
    webService static String getFieldIdFromJs(String objName, String fieldName) {
        return null;
    }
    global static Schema.DisplayType getFieldType(String objName, String fieldName) {
        return null;
    }
    global static String getFieldsFor_Str(String objName, Boolean onlyUpdateables) {
        return null;
    }
    global static List<String> getFieldsFor(String objName, Boolean onlyUpdateables) {
        return null;
    }
    global static String getFieldsetFor_Str(String objName, String fieldsetName) {
        return null;
    }
    global static String getLookupFieldName(String childObjName, String parentObjName) {
        return null;
    }
    global static Map<String,String> getLookups(String childObjName) {
        return null;
    }
    global static String getObjectId(String objName) {
        return null;
    }
    global static String getObjectKeyPrefix(String objName) {
        return null;
    }
    global static String getObjectLabelFromId(String ObjectId) {
        return null;
    }
    global static String getObjectLabelFromId(List<String> objectNames, String ObjectId) {
        return null;
    }
    global static String getObjectNameFromId(String objectId) {
        return null;
    }
    global static String getObjectNameFromId(List<String> objectNames, String objectId) {
        return null;
    }
    global static String getObjectNameFromLabel(String objLabel) {
        return null;
    }
    global static void putValueFor(SObject sobj, String field, String value) {

    }
}
