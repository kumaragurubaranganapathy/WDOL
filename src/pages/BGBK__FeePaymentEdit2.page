<apex:page tabStyle="MUSW__Receipt__c" controller="BGBK.FeePayment2Controller" id="p">
            <apex:includeScript value="/soap/ajax/27.0/connection.js"/>
            <apex:includeScript value="/soap/ajax/27.0/apex.js"/>
            <apex:stylesheet value="/sCSS/29.0/sprites/1297816277000/Theme3/default/gc/versioning.css"/>

            <c:BlockIndicator />            
            <div id="preloader2" style="visibility: hidden;"></div>
            
            <apex:form id="f">
                <apex:sectionHeader title="{!IF($CurrentPage.Parameters.feeId != null, 'Fee', parentObjectLabel)}" subtitle="{!trackno}" id="h">
                    <apex:commandLink action="{!cancel}" value="{!IF($CurrentPage.Parameters.feeId != null,'Fee:'+ trackno,parentObjectLabel+':'+ trackno)}"/>
                    <apex:pageMessages id="msg"/>
                </apex:sectionHeader>
                
                <apex:pageblock id="pb">
                    <apex:pageblockbuttons id="pbb">
                        <apex:commandbutton value="Quick Save" onclick="processAndSave(false);" id="saveBtn" reRender="msg"/>
                        <apex:commandbutton value="Save" onclick="processAndSave(true);" id="saveRetBtn" reRender="msg"/>
                        <apex:commandbutton value="Cancel" action="{!cancel}" id="cancelBtn" immediate="true"/>
                    </apex:pageblockbuttons>
                    
                    
                    <apex:tabPanel id="tabPanel" switchType="client">
                        <apex:tab label="Adjust {!pageMode}" id="allocsTab">
                        <!--------------- PAYMENT ORIENTED VIEW ---------------->
                            <apex:repeat value="{!wpayment}" var="pvo" rendered="{!$CurrentPage.parameters.mode = 'Payment' || $CurrentPage.parameters.mode = 'Receipt'}" id="paymentRepeat">
                                <apex:pageBlockSection title="Payment {!pvo.payment.Name}" columns="1" id="paymentOuter">
                                    <apex:pageBlockSection columns="{!$ObjectType.BGBK__Payment__c.FieldSets.BGBK__Payment_Adjust.size+3 + IF(pvo.feePayments.size = 0,1,0)}" id="paymentDetail">
                                        <!-- <apex:outputPanel rendered="{!pvo.feePayments.size = 0}">
                                            <apex:commandButton action="{!removePayment}" value="Delete Payment" reRender="f" immediate="false">
                                                <apex:param name="deleteps" assignTo="{!tIndex}" value="{!pvo.index}"/>
                                            </apex:commandButton>
                                        </apex:outputPanel> -->
                                        <apex:repeat value="{!$ObjectType.BGBK__Payment__c.FieldSets.BGBK__Payment_Adjust}" var="field" id="fsRepeat">
                                            <apex:inputField value="{!pvo.payment[field]}" onchange="
                                                updatePaymentDelta({!pvo.index}, '{!pvo.payment.BGBK__Amount__c}', parseFloat({!pvo.delta}), {!pvo.refunds.size}, '{!pvo.payment.BGBK__Refunded_Amount__c}');
                                            "/>
                                        </apex:repeat>
                                    
                                        <apex:pageblockSectionItem id="deltaSection">
                                            <apex:outputLabel value="Change" for="delta"/>
                                            <apex:outputPanel >
                                                <apex:outputText value="{!pvo.delta}" style="color:red" id="delta"/>
                                                <apex:inputText value="{!pvo.delta}" style="color:red;visibility:hidden;width:0" id="delta2"/>
                                            </apex:outputPanel>
                                        </apex:pageblockSectionItem>
                                    </apex:pageBlockSection>
                        
                        
                        
                                    <apex:outputPanel id="allocsPanel">
                                        <apex:pageBlockTable value="{!pvo.feePayments}" var="fpvo" id="feePaymentSublist" columns="{!$ObjectType.MUSW__Fee_Payment__c.FieldSets.BGBK__Fee_Payment_Basic.size+3}" width="100%" rendered="{!pvo.feePayments.size > 0}">
                                            <!-- <apex:column >
                                                <apex:facet name="header"></apex:facet>
                                                <apex:commandLink action="{!pvo.removeFeePayment}" value="Remove" reRender="allocsPanel" immediate="false">
                                                    <apex:param name="deletepayment" assignTo="{!pvo.tIndex}" value="{!fpvo.index}"/>
                                                </apex:commandLink>
                                            </apex:column> -->
                                        
                                            <apex:repeat value="{!$ObjectType.MUSW__Fee_Payment__c.FieldSets.BGBK__Fee_Payment_Basic}" var="f">
                                                <apex:column >
                                                    <apex:facet name="header">{!$ObjectType.MUSW__Fee_Payment__c.Fields[f].label}</apex:facet>
                                                    <apex:inputField value="{!fpvo.feePayment[f]}" onchange="
                                                    if('{!$ObjectType.MUSW__Fee_Payment__c.Fields[f].label}' == 'Payment Amount') {
                                                    var newAmt = (this.value != '') ? this.value.toString() : '0';
                                                    newAmt = newAmt.replace(',','');
                                                    var oldAmt = ('{!fpvo.feePayment[f]}' != '') ? '{!fpvo.feePayment[f]}' : '0';
                                                    oldAmt = oldAmt.replace(',','');
                                                    var delta =  parseFloat(newAmt) - parseFloat(oldAmt);
                                                    var deltaOld = {!fpvo.delta};
                                                    document.getElementById('p:f:pb:paymentRepeat:'+{!pvo.index}+':paymentOuter:feePaymentSublist:'+{!fpvo.index}+':delta').innerHTML = (deltaOld + delta).toFixed(2);
                                                    document.getElementById('p:f:pb:paymentRepeat:'+{!pvo.index}+':paymentOuter:feePaymentSublist:'+{!fpvo.index}+':delta2').value = (deltaOld + delta).toFixed(2);
                                                    }"  rendered="{!fpvo.FeePayment.BGBK__Payment__c = pvo.payment.id}"/>
                                                </apex:column>
                                            </apex:repeat>
                                        
                                            <apex:column headerValue="Fee">
                                                <apex:outputField value="{!fpvo.feePayment.MUSW__Fee__c}"/>
                                            </apex:column>
                                        
                                            <apex:column headerValue="Change" id="deltaSection">
                                                <apex:outputPanel rendered="{!fpvo.FeePayment.BGBK__Payment__c = pvo.payment.id}">
                                                <apex:outputText value="{!fpvo.delta}" style="color:red" id="delta"/>
                                                <apex:inputText value="{!fpvo.delta}" style="color:red;visibility:hidden" id="delta2"/>
                                                </apex:outputPanel>
                                            </apex:column>
                                        </apex:pageBlockTable>
                                    </apex:outputPanel>
                                </apex:pageBlockSection>
                            </apex:repeat>
                            <!-- FEE ORIENTED VIEW -->
                            <apex:repeat value="{!wfee}" var="fvo" rendered="{!$CurrentPage.parameters.mode = 'Fee'}" id="feeRepeat">
                                    <apex:pageBlockSection columns="1" id="feeOuter">
                                        <apex:pageBlockSection columns="{!$ObjectType.MUSW__Fee__c.FieldSets.BGBK__Fee_Adjust.size+2}" id="feeDetail">
                                            <!-- <apex:outputPanel rendered="{!fvo.feePayments.size = 0}">
                                                <apex:commandButton action="{!removeFee}" value="Delete Fee" reRender="f" immediate="false">
                                                    <apex:param name="deletefs" assignTo="{!fIndex}" value="{!fvo.index}"/>
                                                </apex:commandButton>
                                            </apex:outputPanel> -->
                                            <apex:repeat value="{!$ObjectType.MUSW__Fee__c.FieldSets.BGBK__Fee_Adjust}" var="field" id="repeatFee">
                                                 <apex:inputField value="{!fvo.fee[field]}" id="feeField" onfocus="this.oldvalue = this.value;" onchange="
                                                         if('{!$ObjectType.MUSW__Fee__c.Fields[field].name}' == 'MUSW__Amount__c') {
                                                             var newFeeAmt = (this.value != '') ? this.value.toString() : '0';
                                                             newFeeAmt = newFeeAmt.replace(',','');
                                                             var oldFeeAmt = (this.oldvalue != '') ? this.oldvalue : '0';
                                                             oldFeeAmt = oldFeeAmt.replace(',','');
                                                             var delta = parseFloat(newFeeAmt) - parseFloat(oldFeeAmt);
                                                             var deltaOld = parseFloat(document.getElementById('p:f:pb:feeRepeat:'+{!fvo.index}+':feeOuter:feeDetail:deltaSection:delta2').value);
                                                             setFeeDelta({!fvo.index}, delta + deltaOld);
                                                             this.oldvalue = this.value;
                                                         }
                                                         if('{!$ObjectType.MUSW__Fee__c.Fields[field].name}' == 'MUSW__Amount_Waived__c')
                                                          {
                                                            var newFeeAmt = (this.value != '') ? this.value.toString() : '0';
                                                             newFeeAmt = newFeeAmt.replace(',','');
                                                             var oldFeeAmt = (this.oldvalue != '') ? this.oldvalue : '0';
                                                             oldFeeAmt = oldFeeAmt.replace(',','');
                                                             var delta = parseFloat(oldFeeAmt) - parseFloat(newFeeAmt);
                                                             var deltaOld = parseFloat(document.getElementById('p:f:pb:feeRepeat:'+{!fvo.index}+':feeOuter:feeDetail:deltaSection:delta2').value);
                                                             setFeeDelta({!fvo.index}, delta + deltaOld);
                                                             document.getElementById('p:f:pb:feeRepeat:'+{!fvo.index}+':feeOuter:feeDetail:repeatFee:'+{!fAdjMap[field]}+':feeField').value = newFeeAmt;
                                                             this.oldvalue = this.value;
                                                          }
                                                          if('{!$ObjectType.MUSW__Fee__c.Fields[field].name}' == 'MUSW__Amended_Amount__c')
                                                              {
                                                                var newFeeAmt = (this.value != '') ? this.value.toString() : '0';
                                                                 newFeeAmt = newFeeAmt.replace(',','');
                                                                 var oldFeeAmt = (this.oldvalue != '') ? this.oldvalue : '0';
                                                                 oldFeeAmt = oldFeeAmt.replace(',','');
                                                                 var delta = parseFloat(oldFeeAmt) - parseFloat(newFeeAmt);
                                                                 var deltaOld = parseFloat(document.getElementById('p:f:pb:feeRepeat:'+{!fvo.index}+':feeOuter:feeDetail:deltaSection:delta2').value);
                                                                 setFeeDelta({!fvo.index}, delta + deltaOld);
                                                                 document.getElementById('p:f:pb:feeRepeat:'+{!fvo.index}+':feeOuter:feeDetail:repeatFee:'+{!fAdjMap[field]}+':feeField').value = newFeeAmt;
                                                                this.oldvalue = this.value;
                                                              }
                                                          "/>
                                            </apex:repeat>
                                            
                                            <apex:pageblockSectionItem id="deltaSection">
                                                <apex:outputLabel value="Change" for="delta"/>
                                                <apex:outputPanel >
                                                <apex:outputText value="{!fvo.delta}" style="color:red; width: 60px" id="delta"/>
                                                <apex:inputText value="{!fvo.delta}" style="color:red;visibility:hidden; width: 20px" id="delta2"/>
                                                </apex:outputPanel>
                                            </apex:pageblockSectionItem>
                                            <apex:inputCheckbox id="autoAdjustChk" value="{!fvo.autoAdjustAlloc}" label="Auto-Adjust Allocations">
                                                <apex:actionSupport event="onchange" reRender="feeOuter"/>
                                            </apex:inputCheckbox>
                                        </apex:pageBlockSection>
                                        
                                        <apex:pageBlockTable value="{!fvo.feePayments}" var="fpvo" id="feePaymentSublist" columns="{!$ObjectType.MUSW__Fee_Payment__c.FieldSets.BGBK__Fee_Payment_Basic.size+3}" width="100%" rendered="{!fvo.feePayments.size != 0 && fvo.autoAdjustAlloc == false}">
                                                <!-- <apex:column >
                                                    <apex:facet name="header"></apex:facet>
                                                    <apex:commandLink action="{!fvo.removeFeePayment}" value="Remove" reRender="f" immediate="false">
                                                        <apex:param name="deletepayment" assignTo="{!fvo.tIndex}" value="{!fpvo.index}"/>
                                                    </apex:commandLink>
                                                </apex:column> -->
                                                
                                                <apex:repeat value="{!$ObjectType.MUSW__Fee_Payment__c.FieldSets.BGBK__Fee_Payment_Basic}" var="f">
                                                    <apex:column >
                                                        <apex:facet name="header">{!$ObjectType.MUSW__Fee_Payment__c.Fields[f].label}</apex:facet>
                                                        <apex:inputField value="{!fpvo.feePayment[f]}" onchange="
                                                        if('{!$ObjectType.MUSW__Fee_Payment__c.Fields[f].label}' == 'Payment Amount') {
                                                            var newFeePmtAmt = (this.value != '') ? this.value.toString() : '0';
                                                            newFeePmtAmt = newFeePmtAmt.replace(',','');
                                                            var oldFeePmtAmt = ('{!fpvo.feePayment[f]}' != '') ? '{!fpvo.feePayment[f]}' : '0';
                                                            oldFeePmtAmt = oldFeePmtAmt.replace(',','');
                                                            var delta =  parseFloat(newFeePmtAmt) -  parseFloat(oldFeePmtAmt);
                                                            var deltaOld = {!fpvo.delta};
                                                            document.getElementById('p:f:pb:feeRepeat:'+{!fvo.index}+':feeOuter:feePaymentSublist:'+{!fpvo.index}+':delta').innerHTML = (deltaOld + delta).toFixed(2);
                                                            document.getElementById('p:f:pb:feeRepeat:'+{!fvo.index}+':feeOuter:feePaymentSublist:'+{!fpvo.index}+':delta2').value = (deltaOld + delta).toFixed(2);
                                                        }"/>
                                                    </apex:column>
                                                </apex:repeat>
                                                
                                                <apex:column headerValue="Payment">
                                                    <apex:outputField value="{!fpvo.feePayment.BGBK__Payment__c}"/>
                                                </apex:column>
                                                <apex:column headerValue="Change" id="deltaSection">
                                                    <apex:outputPanel >
                                                    <apex:outputText value="{!fpvo.delta}" style="color:red" id="delta"/>
                                                    <apex:inputText value="{!fpvo.delta}" style="color:red;visibility:hidden" id="delta2"/>
                                                    </apex:outputPanel>
                                                </apex:column>
                                            </apex:pageBlockTable>
                                    </apex:pageBlockSection>
                                </apex:repeat>
                        </apex:tab>
                            
                        <apex:tab label="Refunds" id="refsTab" rendered="{!transactionVersion > 1}" ontabenter="queryReceiptsJS();">
                        <apex:pageblockSection id="refsPanel" columns="1">
                          <apex:pageblockSection title="Available Amount to Refund: ${!totalAvailableAmount}" columns="1" id="refunds" rendered="{!transactionVersion > 1}" collapsible="false">
                                    <apex:pageBlockTable value="{!existingRefunds}" var="refvo" columns="{!$ObjectType.BGBK__Refund2__c.FieldSets.BGBK__Refund2_Basic.size+3}" rendered="{!existingRefunds.size > 0}">

                                            <apex:repeat value="{!$ObjectType.BGBK__Refund2__c.FieldSets.BGBK__Refund2_Basic}" var="f" id="refundFsRepeat">
                                              <apex:column value="{!refvo.r2[f]}"/>
                                                    <!-- <apex:column rendered="{!f != 'BGBK__Contact__c'}">
                                                        <apex:facet name="header">{!$ObjectType.BGBK__Refund2__c.Fields[f].label}</apex:facet>
                                                        <apex:inputField value="{!refvo.r2[f]}"/>
                                                    </apex:column>
                                                    
                                                    <apex:column rendered="{!f = 'BGBK__Contact__c'}">
                                                        <apex:facet name="header">Refundee</apex:facet>
                                                        <apex:selectList value="{!refvo.refundee}" label="Refundee" size="1" style="width:150px" id="refundeeList">
                                                            <apex:selectOptions value="{!refundees}"/>
                                                        </apex:selectList>
                                                        <apex:outputPanel >
                                                            <apex:inputField value="{!refvo.tempRefundee2Lookup.Contact__c}" id="refundee3" style="width:0;color:transparent;background-color:transparent;border:none" onchange="addRefundeeJS(false, {!refvo['index']}, -1, this.value+':'+document.getElementById(this.id+'_lkid').value);"/>
                                                        </apex:outputPanel>
                                                    </apex:column> -->
                                                </apex:repeat>
                                            </apex:pageBlockTable>
                                        </apex:pageblockSection>
                                <apex:pageblockSection columns="1" id="newRefunds" rendered="{!transactionVersion > 1}">
                                 <apex:pageBlockTable value="{!newRefunds}" var="newrefvo" columns="{!$ObjectType.BGBK__Refund2__c.FieldSets.BGBK__Refund2_Basic.size+3}" width="100%" rendered="{!newRefunds.size > 0}">
                                            <apex:column >
                                                <apex:facet name="header"></apex:facet>
                                                    <apex:commandLink action="{!removeNewRefund}" value="Remove" reRender="newRefunds" immediate="false">
                                                        <apex:param name="deleterefund" assignTo="{!deleterefund}" value="{!newrefvo['index']}"/>
                                                    </apex:commandLink>
                                                </apex:column>
                                                <apex:repeat value="{!$ObjectType.BGBK__Refund2__c.FieldSets.BGBK__Refund2_Basic}" var="f" id="newRefFsRepeat">
                                                    <apex:column rendered="{!f != 'BGBK__Contact__c'}">
                                                        <apex:facet name="header">{!$ObjectType.BGBK__Refund2__c.Fields[f].label}</apex:facet>
                                                        <apex:inputField value="{!newrefvo.r2[f]}"/>
                                                    </apex:column>
                                                    
                                                    <apex:column rendered="{!f = 'BGBK__Contact__c'}">
                                                        <apex:facet name="header">Refundee</apex:facet>
                                                        <apex:selectList value="{!newrefvo.refundee}" label="Refundee" size="1" style="width:150px" id="refundeeList">
                                                            <apex:selectOptions value="{!refundees}"/>
                                                        </apex:selectList>
                                                        <apex:outputPanel >
                                                            <apex:inputField value="{!newrefvo.tempRefundee2Lookup.BGBK__Contact__c}" id="refundee3" style="width:0;color:transparent;background-color:transparent;border:none" onchange="addRefundeeJS({!newrefvo['index']}, this.value+':'+document.getElementById(this.id+'_lkid').value);"/>
                                                        </apex:outputPanel>
                                                    </apex:column>
                                                </apex:repeat>
                                            </apex:pageBlockTable>
                                            
                                            <apex:commandButton action="{!addRefund}" value="New Refund" rerender="newRefunds" immediate="false"/>
                                        </apex:pageblockSection>
                                    <apex:actionFunction name="addRefundeeJS" action="{!addRefundee2}" reRender="newRefunds" immediate="false">
                                <apex:param name="refIndex" assignTo="{!rIndex}" value=""/>
                                <apex:param name="refName" assignTo="{!customRefundee}" value=""/>
                            </apex:actionFunction>
                            <apex:pageblockSection columns="1" title="Related Receipts" collapsible="false" rendered="{!relReceipts.size > 0}" id="relatedReceipts">
                              <apex:pageBlockTable value="{!relReceipts}" var="receipt">
                              <apex:repeat value="{!$ObjectType.MUSW__Receipt__c.FieldSets.BGBK__Receipt_Adjust}" var="f" id="relReceiptFsRepeat">
                               <apex:column value="{!receipt[f]}"/>
                                </apex:repeat>
                              </apex:pageBlockTable>
                            </apex:pageBlockSection>
                        </apex:pageblockSection>
                    </apex:tab>
                </apex:tabPanel>
                <!-- passes error message from javascript webservice callout to controller to show on the page -->
                <apex:actionFunction name="addErrorJS" action="{!addErrorMessage}" reRender="msg">
                    <apex:param name="errmsg" assignTo="{!errorMessage}" value=""/>
                </apex:actionFunction>
                
                <!-- okToSave is switched on only when Save button is pressed -->
                <apex:actionFunction name="getGatewayTransactionsJS" action="{!getGatewayTransactions}" reRender="refundProcessScript">
                    <apex:param name="oksave" assignTo="{!okToSave}" value="true"/>
                </apex:actionFunction>
                <apex:actionFunction name="saveJS" action="{!save2}" reRender="msg,pb" status="saveStatus"/>
                <apex:actionFunction name="saveAndReturnJS" action="{!save2AndReturn}" reRender="f" status="saveStatus">
                    <apex:param name="oksave" assignTo="{!okToSave}" value="false"/>
                </apex:actionFunction>
                <apex:actionStatus onstart="disableButtons();" onstop="enableButtons();" id="saveStatus"/>
                <apex:actionFunction name="queryReceiptsJS" action="{!loadRelatedReceipts}"  status="BlockIndicator" oncomplete="document.getElementById('preloader2').style.visibility='hidden';" reRender="refsPanel"/>
                 </apex:pageBlock>
                 <style>
                    #preloader2 {
                      margin: 0;
                      margin-top: image-height/2;
                      margin-left: image-width/2;
                      padding: 0;
                      position: absolute;
                      top: 50%;
                      left: 50%;
                      width: 33px;
                      height: 30px;
                      background: #fff url('/img/loading32.gif') no-repeat center center;
                      z-index: 999;
                    }
                  </style>
                <script>
                var isReturn = false;
                sforce.connection.sessionId = "{!$Api.Session_ID}";
                function processAndSave(isRet) {
                    getGatewayTransactionsJS();
                    isReturn = isRet;
                }

                function disableButtons() {
                    document.getElementById("p:f:pb:pbb:saveBtn").setAttribute("disabled", "disabled");
                    document.getElementById("p:f:pb:pbb:saveBtn").setAttribute("class", "btnDisabled");
                    document.getElementById("p:f:pb:pbb:saveBtn").setAttribute("value", "Saving...");
                    document.getElementById("p:f:pb:pbb:bottom:saveBtn").setAttribute("disabled", "disabled");
                    document.getElementById("p:f:pb:pbb:bottom:saveBtn").setAttribute("class", "btnDisabled");
                    document.getElementById("p:f:pb:pbb:bottom:saveBtn").setAttribute("value", "Saving...");
                    document.getElementById("p:f:pb:pbb:saveRetBtn").setAttribute("disabled", "disabled");
                    document.getElementById("p:f:pb:pbb:saveRetBtn").setAttribute("class", "btnDisabled");
                    document.getElementById("p:f:pb:pbb:saveRetBtn").setAttribute("value", "Saving...");
                    document.getElementById("p:f:pb:pbb:bottom:saveRetBtn").setAttribute("disabled", "disabled");
                    document.getElementById("p:f:pb:pbb:bottom:saveRetBtn").setAttribute("class", "btnDisabled");
                    document.getElementById("p:f:pb:pbb:bottom:saveRetBtn").setAttribute("value", "Saving...");
                    document.getElementById("p:f:pb:pbb:cancelBtn").setAttribute("disabled", "disabled");
                    document.getElementById("p:f:pb:pbb:cancelBtn").setAttribute("class", "btnDisabled");
                    document.getElementById("p:f:pb:pbb:cancelBtn").setAttribute("value", "Saving...");
                    document.getElementById("p:f:pb:pbb:bottom:cancelBtn").setAttribute("disabled", "disabled");
                    document.getElementById("p:f:pb:pbb:bottom:cancelBtn").setAttribute("class", "btnDisabled");
                    document.getElementById("p:f:pb:pbb:bottom:cancelBtn").setAttribute("value", "Saving...");
                }
                
                function enableButtons() {
                    document.getElementById("p:f:pb:pbb:saveBtn").removeAttribute("disabled");
                    document.getElementById("p:f:pb:pbb:saveBtn").setAttribute("class", "btn");
                    document.getElementById("p:f:pb:pbb:saveBtn").setAttribute("value", "Quick Save");
                    document.getElementById("p:f:pb:pbb:bottom:saveBtn").removeAttribute("disabled");
                    document.getElementById("p:f:pb:pbb:bottom:saveBtn").setAttribute("class", "btn");
                    document.getElementById("p:f:pb:pbb:bottom:saveBtn").setAttribute("value", "Quick Save");
                    document.getElementById("p:f:pb:pbb:saveRetBtn").removeAttribute("disabled");
                    document.getElementById("p:f:pb:pbb:saveRetBtn").setAttribute("class", "btn");
                    document.getElementById("p:f:pb:pbb:saveRetBtn").setAttribute("value", "Save");
                    document.getElementById("p:f:pb:pbb:bottom:saveRetBtn").removeAttribute("disabled");
                    document.getElementById("p:f:pb:pbb:bottom:saveRetBtn").setAttribute("class", "btn");
                    document.getElementById("p:f:pb:pbb:bottom:saveRetBtn").setAttribute("value", "Save");
                    document.getElementById("p:f:pb:pbb:cancelBtn").removeAttribute("disabled");
                    document.getElementById("p:f:pb:pbb:cancelBtn").setAttribute("class", "btn");
                    document.getElementById("p:f:pb:pbb:cancelBtn").setAttribute("value", "Cancel");
                    document.getElementById("p:f:pb:pbb:bottom:cancelBtn").removeAttribute("disabled");
                    document.getElementById("p:f:pb:pbb:bottom:cancelBtn").setAttribute("class", "btn");
                    document.getElementById("p:f:pb:pbb:bottom:cancelBtn").setAttribute("value", "Cancel");
                }
                
                function updatePaymentDelta(pindex, pamt, deltaOld, refSize, oldRefAmt_BACKWARD_COMPAT) {
                    var newPmtAmt;
                    var oldPmtAmt = pamt;
                    var pmtElem = document.getElementById('p:f:pb:paymentRepeat:'+pindex+':paymentOuter:paymentDetail');
                    var pmtElemChildren = pmtElem.childNodes[0].childNodes[0].childNodes[0].childNodes[0].childNodes;
                    for (var i=0; i<pmtElemChildren.length; i++) {
                        if (pmtElemChildren[i].innerText == 'Amount') {
                            newPmtAmt = pmtElemChildren[i+1].childNodes[0].value;
                            break;
                        }
                    }
                    if (newPmtAmt == '') newPmtAmt = '0';
                    newPmtAmt = newPmtAmt.replace(',','');
                    
                    var delta = parseFloat(newPmtAmt) - parseFloat(oldPmtAmt);
                    
                    if (oldRefAmt_BACKWARD_COMPAT == '')
                    {
                        var refTotal = 0;
                        for (var i=0; i<refSize; i++) {
                            var r = parseFloat(document.getElementById('p:f:pb:paymentRepeat:'+pindex+':paymentOuter:refundSublist:'+i+':delta').innerHTML);
                            refTotal += r;
                        }
                        
                        setPaymentDelta(pindex, delta + deltaOld - refTotal);
                    }
                    else
                    {
                        var newRefAmt;
                        var oldRefAmt = oldRefAmt_BACKWARD_COMPAT;
                        if (oldRefAmt == '') oldRefAmt = '0';
                        for (var i=0; i<pmtElemChildren.length; i++) {
                            if (pmtElemChildren[i].childNodes[0].innerHTML.indexOf('Refunded Amount') != -1) {
                                newRefAmt = pmtElemChildren[i+1].childNodes[0].value;
                                break;
                            }
                        }
                        if (newRefAmt == '') newRefAmt = '0';
                        newRefAmt = newRefAmt.replace(',','');
                        
                        var deltaRef = parseFloat(oldRefAmt) - parseFloat(newRefAmt);

                        setPaymentDelta(pindex, delta + deltaOld + deltaRef);
                    }
                }
                
                function setPaymentDelta(pindex, d) {
                    document.getElementById('p:f:pb:paymentRepeat:'+pindex+':paymentOuter:paymentDetail:deltaSection:delta').innerHTML = d.toFixed(2);
                    document.getElementById('p:f:pb:paymentRepeat:'+pindex+':paymentOuter:paymentDetail:deltaSection:delta2').value = d.toFixed(2);
                }
                
                function setFeeDelta(findex, d) {
                    document.getElementById('p:f:pb:feeRepeat:'+findex+':feeOuter:feeDetail:deltaSection:delta').innerHTML = d.toFixed(2);
                    document.getElementById('p:f:pb:feeRepeat:'+findex+':feeOuter:feeDetail:deltaSection:delta2').value = d.toFixed(2);
                }
                </script>
                
                <!-- Render this area after gatewayTransactions is populated by the actionFunction. Like a callback. -->
                <apex:outputPanel id="refundProcessScript">
                    <apex:outputPanel rendered="{!okToSave}">
                        <script>
                        var trans = "{!gatewayTransactions}";
                        if (trans != "{}") {
                            trans = trans.replace("{", "").replace("}", "");
                            var transArr = trans.split(", ");
                            
                            for (var i=0; i<transArr.length; i++) {
                                var aid = transArr[i].split("=")[0].split(":")[0];
                                var tid = transArr[i].split("=")[0].split(":")[1];
                                var amt = parseFloat(transArr[i].split("=")[1]);
                                
                                var allSuccess = true;
                                try {
                                    var resp = sforce.apex.execute("PaymentGateway", "refund", {accountId:aid, transactionId:tid, amount:amt});
                                } catch (err) {
                                    addErrorJS(err.faultstring);
                                    allSuccess = false;
                                    break;
                                }
                            }
                            
                            if (allSuccess == true)
                            {
                              if(isReturn)
                              {
                                saveAndReturnJS()
                              }
                              else
                              {
                                saveJS();
                              }
                            }
                        }
                        else {
                          if(isReturn)
                              {
                                saveAndReturnJS()
                              }
                              else
                              {
                                saveJS();
                              }
                        }
                        </script>
                    </apex:outputPanel>
                </apex:outputPanel>
             
            </apex:form>
        </apex:page>