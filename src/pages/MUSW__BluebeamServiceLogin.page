<apex:page showHeader="true" sidebar="true" controller="MUSW.BluebeamServiceLoginController" action="{!checkPageParametersForOAuth}" id="page">
    <apex:includeScript value="https://code.jquery.com/jquery-3.1.1.min.js" />
    <apex:form id="oauthform">
        <p>The following button will open a window for the BlueBeam Authentication page, please sign in if necessary, then click Allow. You may have to allow popups for this page to see the window.</p>
        <apex:commandButton action="{!retrieveOAuthUrls}" value="Manual login to Bluebeam" id="token" reRender="messages" oncomplete="redirect('{!oauthUrl}','{!bbRedirectUrl}');"/>
        <br/><br/>
        <p>This button with force a refresh of the access token!</p>
        <apex:commandButton action="{!refreshOAuthProperties}" value="Update the session tokens" id="session" reRender="messages"/>
        <br/><br/>
        <p>This will return the last messages from the authentication process for this process.</p>
        <apex:commandButton action="{!getMessages}" value="Get message log" id="messages" reRender="messages"/>
        <br/><br/>
        <apex:pageBlock id="formdata">
            <apex:pageBlockSection id="messages">
                <apex:messages id="mymessage"/>
            </apex:pageBlockSection>
        </apex:pageBlock>
        
        <apex:actionFunction name="handleAuthCode" action="{!checkPageParametersForOAuth}" rerender="oauthform">
            <apex:param name="code" value=""/>
            <apex:param name="state" value=""/>
        </apex:actionFunction>
    </apex:form>

    <script>
        var popupWindow;
        var bbUrl; // url for user to manually log in to bluebeam
        var hubUrl; // url of the visualforce page on BG Hub, which handles redirect from BB and passes code back to this page.
        window.addEventListener('message', handleMessage, false);

        function redirect(url, redirectUrl ) {
            // url is the full url to bluebeam
            bbUrl = url;
            hubUrl = redirectUrl;
            popupWindow = window.open(hubUrl, "", "height=500,width=500");
        }

        function handleMessage(event) {
            var data = event.data;
            if (data === 'DONE') {
                popupWindow.postMessage(bbUrl, hubUrl);
            } else if (data && data.code) {
   
                code = data.code;
                state = data.state;
                // set these values as page parameters, so can be used by Controller to extract and update the oauth property
                handleAuthCode(code, state);
               popupWindow.close();
            }
        }
    </script>
</apex:page>