<!--*************************************************************************************************************
**************************************************************************************************************
** Name             : ResourcesComp
** Description      : Common recources component for JS & CSS include
** Version          : 1.0
** Built By         : 
**------------------------------------------------------------------------------------------------------------------------
** Modification Log:
**--------------------------
** Developer                    Date                    Version             Description
**------------------------------------------------------------------------------------------------------------------------
** 
**																			
** Review Log:
**---------------
** Reviewer                     Date                    Version             Description
**------------------------------------------------------------------------------------------------------------------------
**
*************************************************************************************************************-->
<apex:component controller="MaintenancePageCtlr">
    <Apex:attribute name="LoadAjaxToolkit" description="Specify if you need to load SF connection file " type="boolean" default="true" />
    <Apex:attribute name="LoadDataTables" description="Specify if you need to load Data table resources " type="boolean" default="false" />
    <Apex:attribute name="LoadAddressUtility" description="Specify true if you need to load address function library" default="false"  type="boolean"/>
    <!-- JQuery Script Files -->
    <c:AddressJsUtility rendered="{!LoadAddressUtility}"/>
    <apex:includeScript value="{!$Resource.JQueryMin }" />
    <apex:includeScript value="{!URLFOR($Resource.DDStyle,'DD_JS/jquery-ui.js')}"/>
    
    <Apex:outputpanel rendered="{!LoadDataTables}">
        <apex:includeScript value="{!URLFOR($Resource.DDStyle,'DD_JS/jquery.dataTables.min.js')}"/>
    </Apex:outputpanel>
    <apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/tether/1.3.2/js/tether.js" />
    <apex:includeScript value="{!URLFOR($Resource.DD_Bootstrap,'bootstrap/dist/js/bootstrap.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.DDStyle,'Bootbox/bootbox.min.js')}" />
    
    <!-- JQuery Script Files -->
    <!-- Style Sheets -->
    
    <apex:stylesheet value="{!URLFOR($Resource.DDStyle,'DD_CSS/jq_ui/jquery-ui-1.11.4.custom/jquery-ui.css')}"/>
    <apex:stylesheet value="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css"/>
    
    
    <apex:stylesheet value="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css"/>
    <apex:stylesheet value="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css.map"/>
    <apex:stylesheet value="https://cdnjs.cloudflare.com/ajax/libs/tether/1.3.2/css/tether.min.css"/>
    
    <Apex:outputpanel rendered="{!LoadDataTables}">
        <apex:stylesheet value="{!URLFOR($Resource.DDStyle,'DD_CSS/jquery.dataTables.min.css')}"/>
    </Apex:outputpanel>
    
    <apex:stylesheet value="{!URLFOR($Resource.DDStyle,'bootstrap-select/bootstrap-select.min.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.DDStyle,'bootstrap-select/bootstrap-select.min.js')}" />
    
    
    <apex:stylesheet value="{!$Resource.CSS_Main}" />
    <apex:stylesheet value="{!$Resource.CSS_ProgressBar}" />
    <apex:stylesheet value="{!$Resource.CSS_Dashboard}" />
    
    <!-- Style Sheets -->
    <!-- Javascript External Files -->
    
    <apex:includeScript value="{!$Resource.JS_Education}" />
    <apex:includeScript value="{!$Resource.JS_Form}" />
    <apex:includeScript value="{!$Resource.JS_Nav}" />
    <apex:includeScript value="{!$Resource.JS_Home}" />
    
    <apex:outputpanel rendered="{!LoadAjaxToolkit}">
        <script src="/soap/ajax/33.0/connection.js" type="text/javascript"></script>
        <script src="/soap/ajax/33.0/apex.js" type="text/javascript"></script>
    </apex:outputpanel>
    <c:ValidationEngine />
    <c:DateJSUtility />
    
    <apex:outputpanel rendered="{!isActiveMessage && inPreMaintenancePeriod && isHomepage}">
        <div class="bootbox modal fade my-modal in" role="dialog" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Scheduled maintenance notice</h4>
                    </div>
                    <div class="modal-body">
                        <div class="bootbox-body">
                       <!--     {!cm.Message__c} <br/> <br/>
                            <strong>Start Date/Time:</strong><apex:outputText value=" {!cm.StartDateTime__c}" /> (PST) <br/>
                            <strong>End Date/Time:</strong><apex:outputText value=" {!cm.EndDateTime__c}" /> (PST)   -->
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn btn-primary" id="close-modal" data-bb-handler="continue" type="button">Ok</button>
                    </div>
                </div>
            </div>
        </div>
        
        <script>
        $('body').addClass('modal-open');
        $('.modal').show();
        $('.modal-backdrop').addClass('in');
        $('body').append('<div class="modal-backdrop fade in"></div>');
        
        $('#close-modal').on('click', function(){
            $('.modal').hide();
            $('.modal-backdrop').removeClass('in');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        });
        </script>
    </apex:outputpanel>
    
    
    
    <apex:outputpanel rendered="{!isActiveMessage && inMaintenancePeriod && isHost && NOT(isMaintenancepage)}">
        <script> location.href = "/OH_Maintenance_Page"; </script>
        </apex:outputpanel>
        
        
        
        <input type="hidden" id="globalPageInfo" value="{!pageInfo}"/>
            
            <!-- Javascript External Files -->
                <script type="text/javascript">
                    $(function() {
                        // Date picker
                        $('.customDateNow').datepicker({
                            onSelect: function()
                            {
                                $(this).parent().removeClass("error") ;
                                $(this).parent().removeClass("errorElement") ;
                                
                                // LOGIC TO HANDLE ANIMATION
                                $(this).parent().find(".InputLabel").removeClass('InputLabel_Out').addClass('InputLabel_In');
                            }
                        });
                        
                        // Date picker
                        $('.customDatePicker').datepicker({
                            onSelect: function(){
                                $(this).parent().removeClass("error") ;
                                $(this).parent().removeClass("errorElement") ;
                                var curDate = $(this).val();
                                var date = new Date(curDate);
                                var day = '' + date.getDate();
                                if(day.length < 2) {
                                    day = '0' + day;
                                }
                                var month = '' + (date.getMonth() + 1);
                                if(month.length < 2) {month = '0' + month;}
                                var year = '' + date.getFullYear();
                                $(this).val(year + '-' + month + '-' + day);
                            }
                        });
                        
                        // Hide suggested date
                        $(".dateFormat").hide();
                        
                        // $("select").parent().addClass('noSpanStyle');
                    });
         NOTIFICATIONS = {
            spinnerStartLarge : function(){
                var imagePath = '{!URLFOR($Resource.DDStyle,"_assets/spin.gif")}' ;
                NOTIFICATIONS.spinnerStart();
            },
            
            spinnerStart : function(){
                // IF SPINNER IS ALREADY started , go back
                if($("#oh_app_page_spinner_inline_div").length > 0 )
                {
                    return false ;
                }
                
                var overlaySpinner = $("<div>").attr({"id":"oh_app_page_spinner_inline_div"}).addClass("spinner")
                .append($("<div>").addClass("spinner-icon"));
                $("body").append(overlaySpinner);
                
                
            },
            
            spinnerStop  : function(){
                $("#oh_app_page_spinner_inline_div").remove() ;
            } ,
            
            showSuccessMessage : function(title,errorMessage,targetElement){
                var err = $("<div>").addClass("alert alert-success").attr("role","alert").append(
                    $("<span>").addClass("glyphicon glyphicon-exclamation-sign").attr("aria-hidden",true).html($("<b>").html(" " + title )),
                    $("<p>").html(errorMessage)).attr("title","Click to hide this  message ");
                targetElement.html(err).show();
                targetElement.click(function(){
                    $(this).hide();
                });
            },
            
            showWarningMessage : function(title,errorMessage,targetElement){
                var err = $("<div>").addClass("alert alert-warning").attr("role","alert").append(
                    $("<span>").addClass("glyphicon glyphicon-exclamation-sign").attr("aria-hidden",true).html($("<b>").html(" " + title )),
                    $("<p>").html(errorMessage)).attr("title","Click to hide this  message ");
                targetElement.html(err).show();
                targetElement.click(function(){
                    $(this).hide();
                });
            },
            
            showErrorMessage : function(title,errorMessage,targetElement)
            {
                var err = $("<div>").addClass("alert alert-danger").attr("role","alert").append(
                    $("<span>").addClass("glyphicon glyphicon-exclamation-sign").attr("aria-hidden",true).html($("<b>").html(" " + title )),
                    $("<p>").html(errorMessage)).attr("title","Click to hide this  message ");
                targetElement.html(err).show();
                targetElement.click(function(){
                    $(this).hide();
                });
            }
        };
        
        MODAL_UTILITY = {
            openDeleteConfirmationModal : function(deleteConfirmationMessage , deleteWarningTitle , callBackParameters , callbackFunctionOnDelete )
            {
                bootbox.dialog({
                    message:deleteConfirmationMessage ,
                    title: deleteWarningTitle,
                    onEscape: function() {},
                    backdrop: true,
                    
                    /**
               * @optional Boolean
               * @default: true
               * show a close button
               */
                    closeButton: false,
                    animate: true,
                    className: "my-modal",
                    buttons: {
                        cancel: {
                            label: "Cancel",
                            className: "btn btn-tertiary",
                            callback: function() { }
                        },
                        continue: {
                        label: "Delete",
                        className: "btn btn-primary",
                        callback: function()
                        {
                        if(typeof callbackFunctionOnDelete === "function")
                        {
                        callbackFunctionOnDelete(callBackParameters);
                    }
                }
                               }
                               }
                               });
                
                
            },
            
            openContinueConfirmationModal : function(contConfirmationMessage , contWarningTitle , callBackParameters , callbackFunctionOnContinue )
            {
                bootbox.dialog({
                    message:contConfirmationMessage ,
                    title: contWarningTitle,
                    onEscape: function() {},
                    backdrop: true,
                    
                    /**
               * @optional Boolean
               * @default: true
               * show a close button
               */
                    closeButton: false,
                    animate: true,
                    className: "my-modal",
                    buttons: {
                        cancel: {
                            label: "Cancel",
                            className: "btn btn-tertiary",
                            callback: function() { }
                        },
                        continue: {
                        label: "Continue",
                        className: "btn btn-primary btn-success",
                        callback: function()
                        {
                        if(typeof callbackFunctionOnContinue === "function")
                        {
                        callbackFunctionOnContinue(callBackParameters);
                    }
                }
                               }
                               }
                               });
                
                
            },
            openConfirmationModal : function(contConfirmationMessage , contWarningTitle , callBackParameters , callbackFunctionOnContinue )
            {
                bootbox.dialog({
                    message:contConfirmationMessage ,
                    title: contWarningTitle,
                    onEscape: function() {},
                    backdrop: true,
                    
                    /**
               * @optional Boolean
               * @default: true
               * show a close button
               */
                    closeButton: false,
                    animate: true,
                    className: "my-modal",
                    buttons: {
                        cancel: {
                            label: "Cancel",
                            className: "btn btn-tertiary",
                            callback: function() { }
                        },
                        continue: {
                        label: "Confirm",
                        className: "btn btn-success",
                        callback: function() {
                        	if(typeof callbackFunctionOnContinue === "function") {
                            callbackFunctionOnContinue(callBackParameters);
                    		}
                		}
                               }
                               }
                               });
                $(this).init(function(){
                    setTimeout(function(){
                        $('.modal-body').attr('tabindex','0').focus();
                    }, 1000);
                });
                
                
            },
            
            openCancelConfirmationModal : function(cancelConfirmationMessage , cancelWarningTitle , callBackParameters , callbackFunctionOnCancel )
            {
                bootbox.dialog({
                    message:cancelConfirmationMessage ,
                    title: cancelWarningTitle,
                    onEscape: function() {},
                    backdrop: true,
                    
                    /**
               * @optional Boolean
               * @default: true
               * show a close button
               */
                    closeButton: false,
                    animate: true,
                    className: "my-modal",
                    buttons: {
                        cancel: {
                            label: "No",
                            className: "btn btn-tertiary",
                            callback: function() { }
                        },
                        continue: {
                        label: "Yes",
                        className: "btn btn-primary",
                        callback: function()
                        {
                        if(typeof callbackFunctionOnCancel === "function")
                        {
                        callbackFunctionOnCancel(callBackParameters);
                    }
                }
                               }
                               }
                               });
                
                
            },
            
            errorMessageModal : function(errorMessage , errorTitle)
            {
                 bootbox.dialog({
                     message:errorMessage ,
                    title: errorTitle,
                    onEscape: function() {},
                    backdrop: true,
                    
                    /**
                   * @optional Boolean
                   * @default: true
                   * show a close button
                   */
                    closeButton: false,
                    animate: true,
                    className: "my-modal",
                    buttons: {
                        cancel: {
                            label: "OK",
                            className: "btn btn-primary",
                            callback: function() {}
                        }
                    }
                    
                });
                MODAL_UTILITY.afterModal();
                
            },
            
            successMessageModal : function(successMessage , successTitle, callackParameters, callbackFunctionOnOk)
            {
                bootbox.dialog({
                    message:successMessage ,
                    title: successTitle,
                    onEscape: function() {},
                    backdrop: true,
                    
                    /**
                   * @optional Boolean
                   * @default: true
                   * show a close button
                   */
                    closeButton: false,
                    animate: true,
                    className: "my-modal",
                    buttons: {
                        cancel: {
                            label: "OK",
                            className: "btn btn-primary",
                            callback: function() {
                                if(typeof callbackFunctionOnOk === "function"){
                                    callbackFunctionOnOk(callackParameters);
                                }
                            }
                        }
                    }
                });
                
                
            },
            
            paymentMessageModal : function(paymentMessage)
            {
                bootbox.dialog({
                    message: paymentMessage,
                    title: 'Payment Required',
                    onEscape: function() {},
                    backdrop: true,
                    
                    /**
                   * @optional Boolean
                   * @default: true
                   * show a close button
                   */
                    closeButton: false,
                    animate: true,
                    className: "my-modal",
                    buttons: {
                        cancel: {
                            label: "Pay now",
                            className: "btn btn-primary",
                            callback: function() {
                                window.location.href = '/Cart';
                            }
                        }
                    }
                });
                
                
            },
            
            openModalWithOptions : function(modalContent,modalTitle){
                bootbox.dialog({
                    onEscape: true,
                    backdrop: undefined,
                    closeButton: false,
                    animate: true,
                    message : modalContent ,
                    title : modalTitle,
                    className: "my-modal"
                });
            },
            
            openModalWithOptions2 : function(modalContent,modalTitle){
                bootbox.dialog({
                    onEscape: function() {},
                    backdrop: true,
                    closeButton: false,
                    animate: true,
                    message : modalContent ,
                    title : modalTitle,
                    className: "my-modal"
                });
            }, 
            
            openModal : function(modalContent,modalTitle){
                bootbox.dialog({
                    onEscape: true,
                    backdrop: undefined,
                    closeButton: true,
                    animate: true,
                    message : modalContent ,
                    title : modalTitle,
                    className: "my-modal"
                });
            },
            afterModal : function(){
                setTimeout(function(){
                    $('.modal-body').attr('tabindex','0').focus();
                }, 1000);
            }
            
        }
        
        ;GLOBALINFO = {
            getProfileId :function()
            {
                if(typeof licGlobalObj !== "undefined")
                {
                    return licGlobalObj.contactId ;
                }else{
                    return null ;
                }
            },
            
            getLicenseId : function()
            {
                if(typeof licGlobalObj !== "undefined")
                {
                    return licGlobalObj.licenseId ;
                }else{
                    return null ;
                }
            }
        }
        
        ;ID_UTILITY = {
            escVFId : function(myid)
            {
                return '#' + myid.replace(/(:|\.)/g,'\\\\$1');
            }
        }
        
        
        //Hack for the first adding JS
        function setFocusOnLoad() {
        };
        
        
        /*
    * It handle input text , dropdown and text area
    Below script is used to create our custom animated form.
    It extends existing jQuery function , so we can call this method on jQuery selcctor
    */
        
        jQuery.fn.extend({
            bindAnimatedForm: function() {
                this.find(".animated-input-group").each(function(index,val)
                                                        {
                                                            // BIND RESPECTIVE EVENTS TO EACH ELEMNENTS
                                                            if($(val).find("input:text").length == 1 || $(val).find("input:password").length == 1 || $(val).find("textarea").length == 1)
                                                            {
                                                                var inputElement = null;
                                                                if($(val).find("input:text").length == 1){
                                                                    inputElement = $(val).find("input:text");
                                                                } else if($(val).find("input:password").length == 1){
                                                                    inputElement = $(val).find("input:password");
                                                                } else if ($(val).find("textarea")){
                                                                    inputElement = $(val).find("textarea");
                                                                } else {
                                                                    inputElement = null;
                                                                }
                                                                
                                                                // var inputElement = $(val).find("input:text").length == 1 ? $(val).find("input:text") : $(val).find("textarea") ;
                                                                
                                                                if(inputElement.val() == '')
                                                                {
                                                                    $(val).find(".InputLabel").removeClass("InputLabel_In").addClass("InputLabel_Out") ;
                                                                }else
                                                                {
                                                                    $(val).find(".InputLabel").removeClass("InputLabel_Out").addClass("InputLabel_In") ;
                                                                }
                                                                
                                                                inputElement.on('focus',function()
                                                                                {
                                                                                    $(val).find(".bottomShade").addClass("activeSpan");
                                                                                    $(val).find(".InputLabel").removeClass("InputLabel_Out").addClass("InputLabel_In") ;
                                                                                });
                                                                
                                                                // Below function is required , DO NOT REMOVE - BW
                                                                
                                                                inputElement.on('blur',function()
                                                                                {
                                                                                    $(val).find(".bottomShade").removeClass("activeSpan");
                                                                                    
                                                                                    if($(this).val().trim().length == 0 )
                                                                                    {
                                                                                        $(val).find(".InputLabel").removeClass('InputLabel_In').addClass('InputLabel_Out');
                                                                                    }else
                                                                                    {
                                                                                        $(val).find(".InputLabel").removeClass('InputLabel_Out').addClass('InputLabel_In');
                                                                                    }
                                                                                });
                                                                
                                                                // To validate Numeric inputs
                                                                if($(val).hasClass("NumberOnly"))
                                                                {
                                                                    inputElement.on("keyup",function(e)
                                                                                    {
                                                                                        if($.isNumeric($(this).val()) == false )
                                                                                        {
                                                                                            $(this).val('') ;
                                                                                        }
                                                                                    });
                                                                }
                                                                
                                                            }else if($(val).find("select").length == 1)
                                                            {
                                                                $(val).find(".InputLabel").removeClass("InputLabel_Out").addClass("InputLabel_In") ;
                                                            }
                                                            ///***********  BINDING ENDS *********
                                                        });
            },
            unBindAnimatedForm: function()
            {
                // ADD SOME CODE TO REMOVE ALL BINDINGS
            }
        });
        
        
        
        /*
            @Below script will start spinner on every page and it
            kill spinner once page load completes
            DO NOT REMOVE
        */
        $(window).load(function()
                       {
                           var pageInfo = JSON.parse($("#globalPageInfo").val()) ;
                           
                           if(pageInfo.isGuestUser == 'true' || pageInfo.isGuestUser ==true)
                           {
                               $("#gotoCedLink").remove() ;
                               //replace target of Continue Education link from header
                               $(".mobile-nav-links, .nav-links").find("#header-ced-link").attr("href","/oh_findclass") ;
                           }
                           
                           $(".mobile-nav-links, .nav-links").find("a").on("click",function(e)
                                                                           {
                                                                               e.preventDefault();
                                                                               var currentPage = pageInfo.PageURL.toLowerCase() ;
                                                                               var expectedTarget = $(e.target).attr("href").toLowerCase() ;
                                                                               
                                                                               //if(currentPage.indexOf(expectedTarget)== -1 )
                                                                               //{
                                                                               NOTIFICATIONS.spinnerStart();
                                                                               window.location= expectedTarget ;
                                                                               //}
                                                                               
                                                                           }) ;
                           
                           //  NOTIFICATIONS.spinnerStop();
                           
                       });
        
        // NOTIFICATIONS.spinnerStart();
        
        
        </script>
        
        <script>
        if (window.location.hostname.indexOf('force.com') < 0) {
            (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
                                    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
            
            ga('create', 'UA-82410034-1', 'auto');
            ga('send', 'pageview');
        }
        //added to update the Title tag on all pages
        $('title').append(' | eLicense');
        </script>
    </apex:component>