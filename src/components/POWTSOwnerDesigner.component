<apex:component controller="OwnerDesigner" layout="block">
    <apex:attribute name="BusinessOwnerList" type="String" description="Affiliations records"/>
    <apex:attribute name="parentId" type="string" description="permit Id" />
    <apex:attribute name="servId" type="string" description="permit Id" />
    <apex:attribute name="compLabel" type="String" description="Label"/>
    <apex:attribute name="permit" type="MUSW__Permit2__c" description="permit"/>
    <apex:attribute name="compDesc" type="String" description="Description"/>
    <apex:attribute name="affiliationObject" type="Affiliation__c" description="Affiliation object"/>
    <div class="col-sm-3 col-md-3">
        <h2>{!compLabel}</h2>
        <p><apex:outputText value="{!compDesc}" escape="false" /></p>
    </div>
    <div class="labeloverflowing col-sm-5 col-sm-offset-1 col-md-5 no-padding">
        <!-- Display list of records -->
        <div class="home">
            <div class="BusinessOwnersList">
                <div class="row">
                    <ul class="list-style-none" id="BusinessOwnersList">
                        <!-- Attach existing rows here -->
                    </ul>
                </div>
            </div>
        </div>
        <!-- Record entry form -->
        <div class="row ownersFormSection" style="display:none" id="ownersFormSectionEditContainer">
            <div  id="emailCriteriaSection">
                <div class="row">
                    <input type="checkbox" name="createnewAff" id="createnewAff"  onclick="createnewaff();"/>
                    <label for="createnewAff" id="createnewAffLabel">Create an Affiliation without searching by email</label>
                </div>
                <div class="row">
                    <strong>OR</strong>
                </div>
                <div class="row">
                    <label for="emailSearch" id="emailSearchLabel">Search by Email</label>
                    <input type="text" class="form-control" id="emailSearch"/>
                </div>
                <div class="row rowPadding">
                    <input type="button" class="btn btn-tertiary cancelOwner" value="Cancel" id="affiliationCancel2" />
                </div>
            </div>
            <div class="row"  style="display:none"  id="emailsearchsection" >
                <form class="animated-form">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group-inanimated required">
                                <apex:outputLabel value="Type of Affiliation" styleClass="" for="typeofAffPOD" />
                                <apex:inputField value="{!affiliationObject.Type__c}" styleClass="form-control" id="typeofAffPOD" html-aria-required="true" />
                                <input type="text" class="form-control" id="podAffCurrRecordId" style="display:none"/>
                                <span></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group required">
                                <label for="contactFirstNamePOD" id="contactFirstNameLabel">First Name</label>
                                <input type="text" class="form-control" id="contactFirstNamePOD" aria-required="true" />
                                <span></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group required">
                                <label for="contactLastNamePOD" id="contactLastNameLabel">Last Name</label>
                                <input type="text" class="form-control" id="contactLastNamePOD" aria-required="true" />
                                <span></span>
                            </div>
                        </div>
                    </div> 
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group-inanimated">
                                <label for="contactCompanyPOD" id="contactCompanyPODLabel">Company</label>
                                <input class="form-control" id="contactCompanyPOD" aria-required="true"/>
                                <span></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6" >
                            <div class="form-group-inanimated required">
                                <label for="contactEmailPOD" id="contactEmailPODLabel">Email</label>
                                <input class="form-control" id="contactEmailPOD" type="email" aria-required="true" />
                                <span></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group-inanimated required">
                                <apex:outputLabel value="Phone" styleClass="" for="podphoneNumberPOD" />
                                <apex:inputField id="podphoneNumberPOD" styleClass="form-control"  html-aria-required="true" value="{!affiliationObject.Contact_s_Phone__c}"/> 
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-8">
                            <div class="form-group required">
                                <label for="podaddressPOD" id="addressLabel">Street Address</label>
                                <input type="text" class="form-control" id="podaddressPOD" aria-required="true"/>
                                <span></span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group required">
                                <label for="podCityPOD" id="cityLabel">City</label>
                                <input type="text" class="form-control" id="podCityPOD" aria-required="true"/>
                                <span></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-8">
                            <div class="form-group required">
                                <label for="podStatePOD" id="stateLabel">State</label>
                                <select class="selectPicker" id="podStatePOD" aria-required="true">
                                    <option value=""></option>
                                    <!-- Append picklist values here -->
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group required">
                                <label for="podzipCodePOD" id="zipCodeLabel">ZipCode</label>
                                <input type="text" class="form-control" maxlength="5" id="podzipCodePOD" aria-required="true"/>
                                <span></span>
                            </div>
                        </div>
                    </div>
                    <div class="row addOwnerBtn">
                        <div class="col-sm-11 btn-paddingMid">
                            <input type="button" class="btn btn-tertiary cancelOwner" value="Cancel" id="affiliationCancel1" />
                            <input type="button" class="btn btn-primary btn-space" value="Save" id="ownersFormSection" />
                        </div>
                    </div>
                    <div id="OwnerListDiv" style="display: none; ">
                        <apex:outputLabel value="{!BusinessOwnerList}"/>
                    </div>                    
                    
                </form>
            </div>
        </div>
        <div class="row addOwnerSection">
            <input type="button" class="btn btn-secondary" value="Add Individual" id="addOwnerSection"/>
        </div>
    </div>
    <section class="row"></section>
    <script>
    // Initialize everything
    var contactfound='';
    var recordsOwners = '';
    var OwnerstateList = '';
    var validationMapper = {};
    var currentRecordId='';
    var editBusinessownerrecord='';
    var affIds = new Set();
    sforce.connection.sessionId = '{!$Api.Session_ID}';
    
    $("#cancelid").on("click", function() {
        $('#createdaffiliation').modal('toggle');    
    });
    
    function isValidEmailAddress(emailAddress) {
        var pattern = new RegExp(/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/);
        return pattern.test(emailAddress);
    };
    
    function createnewaff(){
        if (document.getElementById('createnewAff').checked) 
        {
            $('#emailCriteriaSection').hide();
            $('#emailsearchsection').show();
            $('#createnewAff').hide();
        } 
        else
        {
            $('#emailCriteriaSection').show();
            $('#emailsearchsection').hide();
            $('#createnewAff').show();
            
        }
        
    }
    // On page load
    $(function() {
        OWNERDESIGNERCOMP.loadEvents();
        OWNERDESIGNERCOMP.getStatePicklist();
        OWNERDESIGNERCOMP.getRecords();
        $('#emailSearch').autocomplete({
            minLength: 6,
            scroll: true,
            source: function(request, response) {
                contactsList = [];
                var currentSearchTerm =  '%'+request.term + '%';
                var waiting = [];
                waiting.push("Searching. Please wait...");
                response(waiting);
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.OwnerDesigner.getContacts}', 
                    currentSearchTerm,
                    function(result, event){
                        if (event.status) {
                            recordsAccount = result;
                            if(recordsAccount.length > 0&&isValidEmailAddress( $('#emailSearch').val())){
                                // Create array and collect picklist values markup
                                $.each(recordsAccount, function(i, val) {
                                    // Concatenate markup
                                    
                                    var obj = {};
                                    obj.label = val.FirstName+'  '+val.LastName;
                                    obj.value =val;
                                    contactsList.push(obj);
                                });
                                var results =contactsList;
                                results = results.slice(0, 20);
                                response(results);
                            }
                            else{
                                waiting = [];
                                waiting.push("No result found. Please enter the full email address");
                                response(waiting);                               
                            }
                            // Append picklist values markup
                        }else if (event.type === 'exception') {
                        } else {
                        }
                        
                    }, 
                    {escape: true}
                );
                
            },
            focus: function(event, ui){
                event.preventDefault();
            },
            select: function( event, ui )  {
                event.preventDefault();
                $(this).val(ui.item ? ui.item : "");
                if(ui.item.value!='No result found. Please enter the full email address'){
                    $("#contactEmailPOD").val(ui.item.value.Email);
                    $("#contactFirstNamePOD").val(ui.item.value.FirstName );
                    $("#contactLastNamePOD").val(ui.item.value.LastName);
                    contactfound=ui.item.value.Id;
                    $(this).blur();
                    $('#emailCriteriaSection').hide();
                    $('#emailsearchsection').show();
                    $('#createnewAff').hide();
                    OWNERDESIGNERCOMP.manageAnimatedFormCss();
                }
                else {
                    $('#emailSearch').val('');
                    }
            }
        });
    });
    
    OWNERDESIGNERCOMP = {
        /* Build Validation Object */ 
        BuildValidationObject: function() {
            validationMapper.businessowners = {};
            validationMapper.businessowners.validationObject = {
                fields:[
                    {
                        id:"contactFirstNamePOD",
                        required: "true",
                        name: "First Name",
                        watch: true
                    },
                    {
                        id:"contactLastNamePOD",
                        required: "true",
                        name: "Last Name",
                        watch: true
                    },
                    {
                        id:"podphoneNumberPOD",
                        name: "Phone",
                        validator: "Phone",
                        watch: true,
                        required: "true",
                    },
                    {
                        id:"contactEmailPOD",
                        required: "true",
                        name: "Email",
                        validator: "Email",
                        watch: true
                    },{
                        id:"podaddressPOD",
                        name: "Address",
                        watch: true,
                        required: "true"
                    },{
                        id:"podCityPOD",
                        name: "City",
                        watch: true,
                        required: "true"
                    },{
                        id:"podStatePOD",
                        name: "State",
                        watch: true,
                        required: "true"
                    },{
                        id:"podzipCodePOD",
                        name: "Zip Code",
                        watch: true,
                        required: "true"
                    },{
                        id:"typeofAffPOD",
                        name: "Type",
                        watch: true,
                        required: "true"
                    }
                ]
            }
            validationMapper.businessowners.validator = new ValidationEngine(validationMapper.businessowners.validationObject);
        },
        
        /* Load all JQuery events */
        loadEvents: function() {
            
            /* Event - Click 'Add Affiliation' for loading new form */
            $("#addOwnerSection").on("click", function() {
                $("#currRecordId").val("");
                OWNERDESIGNERCOMP.BuildValidationObject();
                $(".ownersFormSection").show();
                $(".addOwnerSection").hide();
                $(".addOwnerBtn").show();
            });
            
            
            $("#ownersFormSection").on("click", function() {
                if(validationMapper.businessowners.validator.errors().length <= 0){
                    $("#ownersFormSection").prop("disabled",true);
                    OWNERDESIGNERCOMP.saveRecord();
                    $("#ownersFormSection").prop("disabled",false);
                } else {
                    MODAL_UTILITY.errorMessageModal(validationMapper.businessowners.validator.errorHtml());
                }
            });
            
            
            $(".cancelOwner").on("click", function() {
                OWNERDESIGNERCOMP.clearUI();
            });
        },
        
        /* To manage css for animation*/
        manageAnimatedFormCss : function()
        {
            var editForm = $("#ownersFormSectionEditContainer") ;
            editForm.find("input[type='text']").each(function(index,val)
                                                     {
                                                         if($(val).val() != '' )
                                                         {
                                                             $(val).closest(".form-group").find("label").removeClass().addClass("animated") ;
                                                         }
                                                     });
        },
        
        /* Function - dynamic events */
        loadDynamicEvents: function() {
            
            $('.navbar').mouseover(function(event) {
                $(this).find('.navbar-tool').show();
            });
            
            //mouse out of navbar
            $('.navbar').mouseout(function(event) {
                $(this).find('.navbar-tool').hide();
            });
             $(".editBusinessOwnerButton").on("keydown", function(e) {
             	if(e.which == '13'){
                    $(this).trigger("click");
                } 
             });
            $(".editBusinessOwnerButton").on("click", function() {
                // Get current 
                currentRecordId = $(this).attr("id");
                currentRecordId = currentRecordId.substring(3, currentRecordId.length);
                // Loop through list
                $.each(recordsOwners, function(i, val) {
                    // Once record is found
                    if(val.Id == currentRecordId) {
                        $('#emailCriteriaSection').hide();
                        $('#emailsearchsection').show();
                        $('#createnewAff').hide();
                        editBusinessownerrecord=val;
                        // Load other values     
                        var res = val.Contact_s_Name__c.split(" ");
                        
                        $('#contactFirstNamePOD').val(val.Contact_s_Name__c);
                        $('#contactLastNamePOD').val(val.Contact_s_Last_Name__c);
                        $('select[id$=typeofAffPOD]').val(val.Type__c);
                        $("#podaddressPOD").val(val.Contact_s_Street_Address__c);
                        $("#podCityPOD").val(val.Contact_s_City__c );
                        $("#podStatePOD").val(val.Contact_s_state__c);
                        $("#podzipCodePOD").val(val.Contact_s_Zip_code__c);
                        $("#contactEmailPOD").val(val.Contact_s_Email__c);
                        $("#contactCompanyPOD").val(val.Company__c);
                        $('input[id$=podphoneNumberPOD]').val(val.Contact_s_Phone__c);                      
                        OWNERDESIGNERCOMP.manageAnimatedFormCss();
                    }
                });
                
                // Show-hide UI
                OWNERDESIGNERCOMP.BuildValidationObject();
                $(".ownersFormSection").show();
                $(".addOwnerSection").hide();
                $(".addOwnerBtn").show();                
            });
            
        },
        
        /* Function - For querying picklist records */
        getStatePicklist: function() {
            
            // Picklist markup
            var innerHtmlStateList = '';
            // Get object description
            var result = sforce.connection.describeSObject("{!$Label.API_Affiliation}");
            
            // Get picklist array
            for (var i=0; i < result.fields.length; i++) {
                var rt = result.fields[i];
                if(rt.name == 'Contact_s_state__c') {
                    OwnerstateList = rt.getArray("picklistValues");
                }
            }
            
            // Add picklist values to markup
            $.each(OwnerstateList, function(i, val) {
                innerHtmlStateList += '<option value="' + val.value + '">' + val.label + '</option>';
            });
            
            // Append markup
            $("#podStatePOD").append(innerHtmlStateList);
        },
        /* Function - For querying records */
        getRecords: function() {
            
            // Get data from
            recordsOwners = $("#OwnerListDiv").text();
            recordsOwners = JSON.parse(recordsOwners);
            
            // Call markup injection method if records are received
            if(recordsOwners != null) {
                // Inject markup
                OWNERDESIGNERCOMP.loadRecords();
                
                // Show section
                $(".BusinessOwnersList").show();
            }
        },
        /* Function - Populate Existing records */
        loadRecords: function() {
            
            // Clear affiliation records from UI
            $("#BusinessOwnersList").empty();
            
            // Build markup
            var innerHtmlOwner =''; 
            $.each(recordsOwners, function( i, val ) {
                // If institution name in other field
                var Name = (val.Contact_s_Name__c+"")== "undefined" ? "&nbsp;" : val.Contact_s_Name__c;
                var LastName = (val.Contact_s_Last_Name__c+"")== "undefined" ? "&nbsp;" : val.Contact_s_Last_Name__c;
                var typeofAff = (val.Type__c+"")== "undefined" ? "&nbsp;" : val.Type__c;
                var address = (val.Contact_s_Street_Address__c+"")== "undefined" ? "&nbsp;" : val.Contact_s_Street_Address__c;
                var city = (val.Contact_s_City__c+"")== "undefined" || (val.Contact_s_City__c)== ""? "&nbsp;" : val.Contact_s_City__c;
                var state = (val.Contact_s_state__c+"")== "undefined" ? "&nbsp;" : val.Contact_s_state__c;
                var zipCode = (val.Contact_s_Zip_code__c+"")== "undefined" ? "&nbsp;" : val.Contact_s_Zip_code__c;
                var Name = (val.Contact_s_Name__c+"")== "undefined" ?  "&nbsp;" : val.Contact_s_Name__c;
                var phone = (val.Contact_s_Phone__c+"")== "undefined" ? "&nbsp;" : val.Contact_s_Phone__c;
                var company = (val.Company__c+"")== "undefined" ? "&nbsp;" : val.Company__c;                
                // Add markup
                innerHtmlOwner += '<li class="addedlist"><div class="navbar"><div class="row"><div class="col-sm-9"><h5>'+Name+'  '+LastName+'</h5></div><div class="col-sm-3"><button type="button" class="btn-square-icon editBusinessOwnerButton" aria-label="Edit Record" id="edt' +  val.Id + '"><span class="glyphicon glyphicon-pencil"></span></button></div></div><div class="row"><div class="col-sm-12">Status : '+val.Status__c+'</div><div class="col-sm-12">Type  : '+typeofAff+'</div><div class="col-sm-12">Company : '+company+'</div><div class="col-sm-12">Phone : '+phone+'</div><div class="col-sm-12">Address : '+address+'</div><div class="col-sm-12">'+city+ '  '+state+'  ' +zipCode+'</div></div></li>';
            });
            
            // Append records where the current user is the Supervisee 
            $("#BusinessOwnersList").append(innerHtmlOwner);
            
            // Load jquery events
            OWNERDESIGNERCOMP.loadDynamicEvents();
            
            // Stop spinner
            NOTIFICATIONS.spinnerStop();
        },
        
        /* Function - Save a record */
        saveRecord: function() {
            // Start spinner
            NOTIFICATIONS.spinnerStart();
            // Initialize affiliation object            
            sforce.connection.sessionId = "{!$Api.Session_ID}";
            //console.log('session timeout');
            var affiliationObjpod = new sforce.SObject("{!$Label.API_Affiliation}");
            affiliationObjpod.Application_Type__c=licGlobalObj.applicationType;
            if(editBusinessownerrecord!=''&&editBusinessownerrecord!=null){
                affiliationObjpod.Id=editBusinessownerrecord.Id;
            }
            var accOrConId = $("#licAccOrConId").val();
            if(contactfound!=null&&contactfound!=''){
                affiliationObjpod.Related_Contact__c =contactfound;
            }
            affiliationObjpod.Permit_Plan_Review__c =licGlobalObj.permitId;
            affiliationObjpod.Contact_s_Name__c = $("#contactFirstNamePOD").val();
            affiliationObjpod.Contact_s_Last_Name__c = $("#contactLastNamePOD").val()
            affiliationObjpod.Contact_s_Street_Address__c = $("#podaddressPOD").val();
            affiliationObjpod.Contact_s_City__c = $("#podCityPOD").val();
            affiliationObjpod.Contact_s_state__c = $('#podStatePOD').val();
            affiliationObjpod.Contact_s_Zip_code__c = $("#podzipCodePOD").val();
            affiliationObjpod.Status__c = 'Pending';
            affiliationObjpod.Company__c= $("#contactCompanyPOD").val();
            affiliationObjpod.RecordTypeId='{!affiliationObject.RecordTypeId}';
            affiliationObjpod.Type__c=   $('select[id$=typeofAffPOD]').val();
            affiliationObjpod.Contact_s_Credential_Number__c  = $("#contactCompanyPOD").val() ;
            affiliationObjpod.Contact_s_Phone__c = $('input[id$=podphoneNumberPOD]').val(); 
            affiliationObjpod.Contact_s_Email__c= $("#contactEmailPOD").val();
            if(affiliationObjpod != null) {
                var newInsert = false;
                try {
                    if(affiliationObjpod.Id == undefined) {
                        newInsert = true;
                    }
                    delete affiliationObjpod.type; //Don't need the type property from AJAX toolkit to be sent
                    
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.OwnerDesigner.upsertAffiliationRecords}', 
                        affiliationObjpod, 
                        function(result, event){
                            if (result!=null&&result.success) {
                                affiliationObjpod.Id = result.id;
                                
                                if(newInsert == false) {
                                    var podArray = [];
                                    $.each(recordsOwners, function(i, val) {
                                        podArray.push(val.Id);
                                    });
                                    recordsOwners.splice(podArray.indexOf(affiliationObjpod.Id), 1);
                                }
                                if(recordsOwners==null)
                                {
                                    recordsOwners=[];  
                                }
                                recordsOwners.push(affiliationObjpod);
                                OWNERDESIGNERCOMP.loadRecords();
                                OWNERDESIGNERCOMP.clearUI();
                            }
                            else {
                                if(result==null&&event.message=='Page not allowed for the profile'){
                                    window.location.href='/Dashboard';
                                    }
                                if(result==null){
                                                                    MODAL_UTILITY.errorMessageModal('Error saving record. Only one '+affiliationObjpod.Type__c+ ' can be added.');
                                    }else{
                                MODAL_UTILITY.errorMessageModal('Error saving record. ' + result[0].errors.message);
                                        }
                            } 
                        }, 
                        
                        {escape: true}
                    );
                }
                catch(e) {
                    // Show error
                    MODAL_UTILITY.errorMessageModal('Error saving record. ' + e);
                }
                
            }
            
            // Stop spinner
            NOTIFICATIONS.spinnerStop();
        },
        
        /* Function - Delete a record */
        clearUI : function() {
            // Clear input fields
            $("#contactFirstNamePOD").val('');
            $("#contactLastNamePOD").val('')
            
            $("#contactEmailPOD").val('');
            $("#podaddressPOD").val('');
            $("#podCityPOD").val('');
            
            // Clear input fields
            $('input[id$=podphoneNumberPOD]').val('');
            $("#podStatePOD").val('');
            $("#podzipCodePOD").val('');
            $("#contactCompanyPOD").val('')
            editBusinessownerrecord=null;
            $("#podzipCodePOD").val('');  
            $('select[id$=typeofAff]').val('');
            currentRecordId='';
            // Show-hide
            $(".ownersFormSection").hide();
            $(".addOwnerBtn").hide();
            $(".addOwnerSection").show();
            $('#emailCriteriaSection').show();
            $('#emailSearch').val('');
            contactfound='';
            $('#emailsearchsection').hide();
            $('#createnewAff').show();
            document.getElementById('createnewAff').checked=false;
        }
        
    } 
    </script>
</apex:component>