<script src="/soap/ajax/29.0/connection.js"></script>
<script src="/soap/ajax/29.0/apex.js"></script>
<script>
	// will take the prefix as parameter and compare it to all sobject. If found a match, the object name will be returned
	function getObjectNameFromId(prefix) 
	{	//get all objects this user has access to
		var result = sforce.connection.describeGlobal();
		var sobjects = result.getArray("sobjects");
		for (var i=0; i<sobjects.length; i++) 
		{
			// if the prefix match the loop object prefix, found the object
			if (sobjects[i].keyPrefix == prefix)
				objectName = sobjects[i].name;
		}
		return objectName;
	}

	// parse the url to retrieve just the 15 character length Id of the sobject
	var objectId = parent.location.href;
	// the split condition use the string /e?clone to be sure to split it to the right place, and extract the 15 character id
	objectId = objectId.substring(objectId.lastIndexOf("/e?clone")-15,objectId.lastIndexOf("/e?clone"));
	// the first three letters will be the object prefix to compare
	var objectIdRefPrefix = objectId.substring(0,3);
	var objectName = getObjectNameFromId(objectIdRefPrefix);
	// now retrieve the track no field Id from the current object, to construct a url with that id, where we override that value to blank
	var result = sforce.apex.execute("BGCM.UtilitySObject","getFieldIdFromJs",{objName:objectName ,fieldName:'MUSW__Track_No__c'}); 
	parent.location.href = '/' + objectId + '/e?clone=1&' + result + '=&retURL=/' +objectId + '&nooverride=1' ;
</script>